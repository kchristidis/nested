// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/kchristidis/nested/lib/common/common.proto

/*
Package common is a generated protocol buffer package.

It is generated from these files:
	github.com/kchristidis/nested/lib/common/common.proto
	github.com/kchristidis/nested/lib/common/payload.proto

It has these top-level messages:
	Request
	Response
	Payload
*/
package common

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Request struct {
	Payload []byte `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Request) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

type Response struct {
	// Types that are valid to be assigned to Type:
	//	*Response_Foo
	//	*Response_Bar
	Type isResponse_Type `protobuf_oneof:"Type"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type isResponse_Type interface {
	isResponse_Type()
}

type Response_Foo struct {
	Foo bool `protobuf:"varint,1,opt,name=foo,oneof"`
}
type Response_Bar struct {
	Bar string `protobuf:"bytes,2,opt,name=bar,oneof"`
}

func (*Response_Foo) isResponse_Type() {}
func (*Response_Bar) isResponse_Type() {}

func (m *Response) GetType() isResponse_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Response) GetFoo() bool {
	if x, ok := m.GetType().(*Response_Foo); ok {
		return x.Foo
	}
	return false
}

func (m *Response) GetBar() string {
	if x, ok := m.GetType().(*Response_Bar); ok {
		return x.Bar
	}
	return ""
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Response) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Response_OneofMarshaler, _Response_OneofUnmarshaler, _Response_OneofSizer, []interface{}{
		(*Response_Foo)(nil),
		(*Response_Bar)(nil),
	}
}

func _Response_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Response)
	// Type
	switch x := m.Type.(type) {
	case *Response_Foo:
		t := uint64(0)
		if x.Foo {
			t = 1
		}
		b.EncodeVarint(1<<3 | proto.WireVarint)
		b.EncodeVarint(t)
	case *Response_Bar:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Bar)
	case nil:
	default:
		return fmt.Errorf("Response.Type has unexpected type %T", x)
	}
	return nil
}

func _Response_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Response)
	switch tag {
	case 1: // Type.foo
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Type = &Response_Foo{x != 0}
		return true, err
	case 2: // Type.bar
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Type = &Response_Bar{x}
		return true, err
	default:
		return false, nil
	}
}

func _Response_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Response)
	// Type
	switch x := m.Type.(type) {
	case *Response_Foo:
		n += proto.SizeVarint(1<<3 | proto.WireVarint)
		n += 1
	case *Response_Bar:
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.Bar)))
		n += len(x.Bar)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*Request)(nil), "common.Request")
	proto.RegisterType((*Response)(nil), "common.Response")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Get service

type GetClient interface {
	Get(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
}

type getClient struct {
	cc *grpc.ClientConn
}

func NewGetClient(cc *grpc.ClientConn) GetClient {
	return &getClient{cc}
}

func (c *getClient) Get(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := grpc.Invoke(ctx, "/common.Get/Get", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Get service

type GetServer interface {
	Get(context.Context, *Request) (*Response, error)
}

func RegisterGetServer(s *grpc.Server, srv GetServer) {
	s.RegisterService(&_Get_serviceDesc, srv)
}

func _Get_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GetServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/common.Get/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GetServer).Get(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _Get_serviceDesc = grpc.ServiceDesc{
	ServiceName: "common.Get",
	HandlerType: (*GetServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _Get_Get_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/kchristidis/nested/lib/common/common.proto",
}

func init() {
	proto.RegisterFile("github.com/kchristidis/nested/lib/common/common.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 194 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x32, 0x4d, 0xcf, 0x2c, 0xc9,
	0x28, 0x4d, 0xd2, 0x4b, 0xce, 0xcf, 0xd5, 0xcf, 0x4e, 0xce, 0x28, 0xca, 0x2c, 0x2e, 0xc9, 0x4c,
	0xc9, 0x2c, 0xd6, 0xcf, 0x4b, 0x2d, 0x2e, 0x49, 0x4d, 0xd1, 0xcf, 0xc9, 0x4c, 0xd2, 0x4f, 0xce,
	0xcf, 0xcd, 0xcd, 0xcf, 0x83, 0x52, 0x7a, 0x05, 0x45, 0xf9, 0x25, 0xf9, 0x42, 0x6c, 0x10, 0x9e,
	0x92, 0x32, 0x17, 0x7b, 0x50, 0x6a, 0x61, 0x69, 0x6a, 0x71, 0x89, 0x90, 0x04, 0x17, 0x7b, 0x41,
	0x62, 0x65, 0x4e, 0x7e, 0x62, 0x8a, 0x04, 0xa3, 0x02, 0xa3, 0x06, 0x4f, 0x10, 0x8c, 0xab, 0x64,
	0xc5, 0xc5, 0x11, 0x94, 0x5a, 0x5c, 0x90, 0x9f, 0x57, 0x9c, 0x2a, 0x24, 0xc4, 0xc5, 0x9c, 0x96,
	0x9f, 0x0f, 0x56, 0xc1, 0xe1, 0xc1, 0x10, 0x04, 0xe2, 0x80, 0xc4, 0x92, 0x12, 0x8b, 0x24, 0x98,
	0x14, 0x18, 0x35, 0x38, 0x41, 0x62, 0x49, 0x89, 0x45, 0x4e, 0x6c, 0x5c, 0x2c, 0x21, 0x95, 0x05,
	0xa9, 0x46, 0xfa, 0x5c, 0xcc, 0xee, 0xa9, 0x25, 0x42, 0x1a, 0x10, 0x8a, 0x5f, 0x0f, 0xea, 0x0a,
	0xa8, 0xa5, 0x52, 0x02, 0x08, 0x01, 0x88, 0x05, 0x4e, 0x5a, 0x51, 0x1a, 0xc4, 0x7a, 0x29, 0x89,
	0x0d, 0xec, 0x19, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x8c, 0x49, 0xe0, 0x04, 0x05, 0x01,
	0x00, 0x00,
}
